<launch>
  <node name="my_pid_ctrl" pkg="pid_ctrl" type="calc_vel.py" />
 <node name="plot_velocity" pkg="rqt_plot" type="rqt_plot"
  args="/lin_state/x /lin_state/setpoint /ang_state/x /ang_state/setpoint"/>
   

   <!-- This should be the same as used with openni_launch -->
  <arg name="camera" default="camera" />
  <node pkg="nodelet" type="nodelet" args="manager" name="nodelet_manager" />
  <node pkg="nodelet" type="nodelet" name="convert_openni_fovis" 
        args="load depth_image_proc/convert_metric nodelet_manager">
    <remap from="image_raw" to="$(arg camera)/depth_registered/sw_registered/image_rect_raw"/>
    <remap from="image" to="$(arg camera)/depth_registered/image_rect"/>
  </node>
  <node pkg="fovis_ros" type="fovis_mono_depth_odometer" name="kinect_odometer" >

    <remap from="/camera/rgb/image_rect" to="$(arg camera)/rgb/image_rect_mono" />
    <remap from="/camera/rgb/camera_info" to="$(arg camera)/rgb/camera_info" />
    <remap from="/camera/depth_registered/camera_info" to="$(arg camera)/depth_registered/sw_registered/camera_info" />
    <remap from="/camera/depth_registered/image_rect" to="$(arg camera)/depth_registered/image_rect" />
    <param name="approximate_sync" type="bool" value="True" />
  </node>

   <!-- <node name="linear_controller" pkg="pid" type="controller"
   args="1 6 .001 2000 -tfc lin_effort -tfp lin_state -fc 1000"/>
    <node name="angular_controller" pkg="pid" type="controller"
   args="1 6 .001 2000 -tfc ang_effort -tfp ang_state -fc 1000"/> 
   -->
</launch>